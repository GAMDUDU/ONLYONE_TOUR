<?xml version="1.0" encoding="UTF-8"?>

<!-- DTD(Document Type Definition)
	 - 작성한 문서가 어떤 문서인지에 대해서 정의하는 것. 
	 - 하나의 시스템 내에서 사용할 XML 데이터의 구조를 정의하여 유효성을 점검 시 사용함. -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<!-- namespace 명은 패키지명을 포함해서 DAO 인터페이스 이름으로 작성하는 것이 관례.
     namespace 명은 mapper 틀을 구분하는데 식별자로 사용됨. -->
<mapper namespace="traveldao" >

	<!-- 형식) <![CDATA[쿼리문]]> 
		쿼리문을 작성할 때 조건식 기호(>, <, &)를 사용해야 하는데 
		XML에서는 이런 기호들을 쿼리문의 조건식 기호로 인식하는 것이 아니라
		태그로 인식하는 경우가 발생함. 이런 경우에는 에러가 발생함.
		따라서 조건식 기호들을 단순한 문자열로 인식을 시켜주어야 함. -->
			
	<!-- resultType을 mybatis-config.xml 파일과 
		root-context.xml 파일에서	따로 설정해줌 -->
	
	<select id="travelList" resultType="traveldto">
		<![CDATA[
			select * from travel_trip order by travel_num desc
		]]>	
	</select>
	
	<select id="travelNormalList" resultType="traveldto">
		<![CDATA[
			select * from travel_trip where travel_spec='일반' order by travel_num desc
		]]>	
	</select>
	
	<select id="travelHitList" resultType="traveldto">
		<![CDATA[
			select * from travel_trip where travel_spec='인기' order by travel_num desc
		]]>	
	</select>
	
	<select id="travelRecommendList" resultType="traveldto">
		<![CDATA[
			select * from travel_trip where travel_spec='추천' order by travel_num desc
		]]>	
	</select>
	
	<select id="travelNewList" resultType="traveldto">
		<![CDATA[
			select * from travel_trip where travel_spec='신규' order by travel_num desc
		]]>	
	</select>
	
	<select id="travelCont" parameterType="int" resultType="traveldto">
		<![CDATA[
			select * from travel_trip where travel_num = #{num}
		]]>	
	</select>
	
	
	<!-- 리뷰 -->
	
	<select id="reviewList" parameterType="int" resultType="travelreviewdto">
		<![CDATA[
			select * from travel_review_trip where travel_num_fk = #{num} order by treview_num desc
		]]>	
	</select>
	
	<select id="reviewScore" parameterType="int" resultType="String">
		<![CDATA[
			select round(avg(treview_score),2) from travel_review_trip where travel_num_fk = #{num}
		]]>
	</select>
	
	<select id="reviewCount" parameterType="int" resultType="int">
		<![CDATA[
			select count(*) from travel_review_trip where travel_num_fk = #{num}
		]]>
	</select>
	
	<insert id="addReview" parameterType="travelreviewdto">
		<selectKey resultType="int" keyProperty="treview_num" order="BEFORE">
			select max(treview_num) from travel_review_trip
		</selectKey>
		insert into travel_review_trip values(#{treview_num} + 1,
			#{travel_num_fk}, #{treview_score}, #{treview_comm}, 
			sysdate)
	</insert>
	
	<!-- 병권 Search 구현 -->
	<select id="searchTravel" parameterType="String" resultType="traveldto">
		<![CDATA[
			select * from travel_trip where travel_name like '%' || #{search} || '%' 
			or travel_cont like '%' || #{search} || '%' or travel_air like '%' || #{search} || '%'
			
			order by travel_price desc
		]]>
	</select>
	
	<select id="searchHotel" parameterType="String" resultType="hoteldto">
		<![CDATA[
			select * from hotel_trip where hotel_hname like '%' || #{search} || '%' 
			order by hotel_price1 desc
		]]>
	</select>
	
	
	<select id="searchAir" parameterType="String" resultType="AirportDTO">
		<![CDATA[
			select * from air_trip where air_airline like '%' || #{search} || '%' 
		]]>
	</select>
	
	
	<!-- 민경 -->
	
	
	<select id="admintravelcount" resultType="int">
		select count(*) from travel_trip
	</select>
	
	
	<select id="admintravellist" parameterType="pageDto" resultType="traveldto">
		<![CDATA[
		select * from
			(select m.*, row_number()
				over(order by travel_num desc) rnum from travel_trip m)
			where  rnum >= #{startNo} and rnum <= #{endNo}
		]]>	
	</select>
	
	<select id="adminCont" parameterType="int" resultType="traveldto">
  		select * from travel_trip where travel_num=#{num}
  	</select>
  	
  	<insert id="adminTravelAdd" parameterType="traveldto">
  	 <selectKey resultType="int" keyProperty="travel_num" order="BEFORE">
    	select max(travel_num) from travel_trip
    </selectKey>  
  		insert into travel_trip values(#{travel_num}+1,
  		#{travel_name},#{travel_price},#{travel_calender},
  		#{travel_cont},#{travel_spec},#{travel_air},#{travel_room},
  		#{travel_image},#{travel_departure_airport},#{travel_arrival_airport},#{travel_departure_date},
  		#{travel_return_date},#{travel_meeting_time},#{travel_meeting_loc},#{travel_reserve_count})  	
  	</insert>
  	
  	<delete id="travelDel" parameterType="int">
  		delete from travel_trip where travel_num = #{num}
  	</delete>
  	
  	<update id="HotelSeq" parameterType="int">
  		 <![CDATA[
			update travel_trip set travel_num = travel_num - 1
			where travel_num > #{num}
		]]>	
  	</update>
	
</mapper>
